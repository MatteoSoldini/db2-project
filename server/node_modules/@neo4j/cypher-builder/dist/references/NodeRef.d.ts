import { HasLabel } from "@neo4j/cypher-builder/src/expressions/HasLabel";
import type { Param } from "@neo4j/cypher-builder/src/references/Param";
import type { NamedReference } from "@neo4j/cypher-builder/src/references/Reference";
import { Reference } from "@neo4j/cypher-builder/src/references/Reference";
export type NodeProperties = Record<string, Param<any>>;
type NodeRefOptions = {
    labels?: string[];
};
/** Represents a node reference
 * @group References
 */
export declare class NodeRef extends Reference {
    labels: string[];
    constructor(options?: NodeRefOptions);
    hasLabels(...labels: string[]): HasLabel;
    hasLabel(label: string): HasLabel;
}
/** Represents a node reference with a given name
 * @group References
 */
export declare class NamedNode extends NodeRef implements NamedReference {
    readonly id: string;
    constructor(id: string, options?: NodeRefOptions);
    get name(): string;
}
export {};
//# sourceMappingURL=NodeRef.d.ts.map