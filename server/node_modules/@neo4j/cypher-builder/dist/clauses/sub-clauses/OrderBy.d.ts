import type { CypherEnvironment } from "@neo4j/cypher-builder/src/Environment";
import { CypherASTNode } from "@neo4j/cypher-builder/src/CypherASTNode";
import type { Expr } from "@neo4j/cypher-builder/src/types";
import type { Param } from "@neo4j/cypher-builder/src/references/Param";
import type { Literal } from "@neo4j/cypher-builder/src/references/Literal";
import type { Integer } from "neo4j-driver";
export type Order = "ASC" | "DESC";
type OrderProjectionElement = [Expr, Order];
export declare class OrderBy extends CypherASTNode {
    private exprs;
    private skipClause;
    private limitClause;
    addOrderElements(exprs: OrderProjectionElement[]): void;
    skip(offset: number | Param<Integer> | Literal<number>): void;
    limit(limit: number | Param<Integer> | Literal<number>): void;
    private hasOrder;
    /** @internal */
    getCypher(env: CypherEnvironment): string;
}
export {};
//# sourceMappingURL=OrderBy.d.ts.map